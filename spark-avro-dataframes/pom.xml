<!--
  ~ Copyright 2018 Barclays Africa Group Limited
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>za.co.absa.avro.dataframes</groupId>
	<artifactId>spark-avro-dataframes</artifactId>
	<version>0.0.1</version>
	<name>spark-avro-dataframes</name>
	<description>Provides seamless integration between Avro and Spark Structured Streaming</description>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<mockito.version>1.8.5</mockito.version>
		<scalatest.version>3.0.0</scalatest.version>
		<scalatest.maven.version>1.0</scalatest.maven.version>		

		<spark.version>2.2.1</spark.version>
		<kafka.spark.version>0-10</kafka.spark.version>

		<scala.version>2.11.8</scala.version>
		<scala.compat.version>2.11</scala.compat.version>
		<specs.version>2.4.16</specs.version>		
		<scalatest.version>3.0.1</scalatest.version>
	
		<databricks.spark.avro>4.0.0</databricks.spark.avro>

		<avro.version>1.8.2</avro.version>

		<jackson.databind.version>2.6.1</jackson.databind.version>		
	</properties>

	<dependencies>
		<!-- Provides Avro schema to Spark StructType conversion -->
		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-avro_2.11</artifactId>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-core_${scala.compat.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Avro -->
		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>		
			<scope>compile</scope>	
		</dependency>

		<!-- Spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.compat.version}</artifactId>
			<scope>provided</scope>			
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.compat.version}</artifactId>
			<scope>provided</scope>			
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${scala.compat.version}</artifactId>
			<scope>provided</scope>			
		</dependency>
	
		<!-- Spark Kafka -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>		
			<scope>compile</scope>		
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>
			<scope>compile</scope>			
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Provides Avro schema to Spark StructType conversion -->
			<dependency>
				<groupId>com.databricks</groupId>
				<artifactId>spark-avro_${scala.compat.version}</artifactId>
				<version>${databricks.spark.avro}</version>
			</dependency>

			<!-- Test -->
			<dependency>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest_${scala.compat.version}</artifactId>
				<version>${scalatest.version}</version>				
			</dependency>
			<dependency>
				<groupId>org.specs2</groupId>
				<artifactId>specs2-core_${scala.compat.version}</artifactId>
				<version>${specs.version}</version>				
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>				
			</dependency>

			<!-- Avro -->
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>

			<!-- Spark -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming-kafka-${kafka.spark.version}_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming_${scala.compat.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>

			<!-- Jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.databind.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		
		<plugins>		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>
										za.co.absa.avro.dataframes.examples.SampleKafkaDataframeWriterApp
									</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>		
		
			<!-- enable scalatest -->
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>		
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.scalatest</groupId>
					<artifactId>scalatest-maven-plugin</artifactId>
					<version>${scalatest.maven.version}</version>
				</plugin>			
			</plugins>
		</pluginManagement>		
	</build>
	
</project>